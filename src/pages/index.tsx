import { type NextPage } from "next";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Head from "next/head";
import { RouterOutputs, api } from "~/utils/api";
import { type RouterOutputs, api } from "~/utils/api";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex gap-3">
      <img
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-12 w-12 rounded-full"
      />
      <input
        type="text"
        placeholder="Type something!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];

const Post = (props: PostWithAuthor) => {
  const { post, author } = props;

  return (
    <div key={post.id} className=" flex gap-3 border-b border-slate-400 p-4">
      <img
        src={author.profileImageUrl}
        alt="author profile image"
        className="h-12 w-12  rounded-full"
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{` âˆ™ ${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { data: posts, isLoading } = api.posts.getAll.useQuery();
  const user = useUser();

  if (isLoading) return <div>Loading...</div>;

  if (!posts) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className=" border-b border-slate-400 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {!!user.isSignedIn && (
              <>
                <CreatePostWizard />
                <SignOutButton />
              </>
            )}
          </div>
          {!!user.isSignedIn && (
            <div className=" text-white">
              {posts?.map((postWithAuthor) => (
                <Post key={postWithAuthor.post.id} {...postWithAuthor} />
              ))}
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
